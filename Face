#pip install cmake
#pip install face_recognition
# pip install open-cv python

import face_recognition
import cv2
import numpy as np
import csv


video_capture = cv2.VideoCapture(0)

#Load Known Faces
yash_image = face_recognition.load_image_file("Faces/Yash.jpg")
yash_encoding = face_recognition.face_encodings(yash_image)[0]

hritik_image = face_recognition.load_image_file("Faces/Hritik.jpg")
hritik_encoding = face_recognition.face_encodings(hritik_image)[0]

known_face_encodings = [yash_encoding, hritik_encoding]
known_face_names = ["Yash", "Hritik"]

#List of expected Dance students
students = known_face_names.copy()

face_locations = []
face_encodings = []

# Get the current date and time

now = datetime.now()
current_date = now.strftime("%Y-%m-%d")

f = open(f"{current_date}.csv", "w+", newLine="")
lnwriter = csv.writer(f)

while True:
    _, frame = video_capture.read
    small_frame = cv2.resize(frame, (0,0), fx=0.25,fy=0.25 )
    rgb_small_frame = cv2.cvtcolor(small_frame, cv2.COLOR_BGR2RGB)

    #Recognize faces
    face_locations = face_recognition.face_locations(rgb_small_frame)
    face_encodings = face_recognition.face_encodings(rgb_small_frame, face_locations)

    for face_encoding in face_encodings:
        matches = face_recognition.compare_faces(known_face_encodings, face_encoding)
        face_distance = face_recognition.face_distance(known_face_encodings, face_encodings)
        best_match_index = np.argmin(face_distance)

        if(matches[best_match_index]):
            name = known_face_names[best_match_index]

         #Add the text if the person is present
            if name in known_face_names:
                font = cv2.FONT_HERSHEY_SIMPLEX
                BottomLeftCornerOfText = (10, 100)
                fontScale = 1.5
                fontColor - (255, 0, 0)
                thickness = 3
                lineType = 2


            cv2.imshow("Attendance", frame)
            if cv2.waitKey(1) & 0xFF == ord("q"):
                break

    video_capture.release()
    cv2.destroyAllWindows()
    f.close()
